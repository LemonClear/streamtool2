#
# Copyright LemonClear
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

VERSION = 0
PATCHLEVEL = 0
SUBLEVEL = 1
EXTRAVERSION =

# 1.Default Target when none is given on the command line
PHONY := _all
_all:


# 2.Look for make include files relative to root of src 
MAKEFLAGS += -rR --include-dir=$(CURDIR)

# 3.Build source dir
ifeq ($(BUILD_SRC),)

# 4.Output to separate dir
ifeq ("$(origin O)", "command line")
  BUILD_OUTPUT := $(O)
endif

# 5.Cancel implicit rules on top Makefile
$(CURDIR)/Makefile Makefile: ;

ifneq ($(words $(subst :, ,$(CURDIR))), 1)
  $(error main directory cannot contain spaces nor colons)
endif

# 6.BUILD_OUTPUT dir exist(or use -O dir), Run increasement make
ifneq ($(BUILD_OUTPUT),)
saved-output := $(BUILD_OUTPUT)
BUILD_OUTPUT := $(shell mkdir -p $(BUILD_OUTPUT) && cd $(BUILD_OUTPUT) && pwd)
$(if $(BUILD_OUTPUT),, $(error failed to create output directory "$(saved-output)"))

PHONY += $(MAKECMDGOALS) sub-make

$(filter-out _all sub-make $(CURDIR)/Makefile, $(MAKECMDGOALS)) _all: sub-make
	@:

## invoke a increasement make in the output directory, passing relevant variables
sub-make:
	$(MAKE) -C $(BUILD_OUTPUT) BUILD_SRC=$(CURDIR) \
	-f $(CURDIR)/Makefile $(filter-out _all sub-make,$(MAKECMDGOALS))

## end increasement make, and avoid full build
skip-makefile := 1
endif # ifneq ($(BUILD_OUTPUT),)

endif # ifeq ($(BUILD_SRC),)

# 7.BUILD_OUTPUT dir not exist, Run full make
ifeq ($(skip-makefile),)

## 7.1 set source dir
ifeq ($(BUILD_SRC),)
  srctree := .
else
  ifeq ($(BUILD_SRC)/,$(dir $(CURDIR)))
    srctree := ..
  else
    srctree := $(BUILD_SRC)
  endif
endif

export BUILD_SRC

## 7.2 set objtree, src, obj
objtree         := .
src             := $(srctree)
obj             := $(objtree)

export srctree objtree

## 7.3 set version header
version_h := include/version.h

## 7.4 simulator version 
SIMUVERSION = $(VERSION)$(if $(PATCHLEVEL),.$(PATCHLEVEL)$(if $(SUBLEVEL),.$(SUBLEVEL)))$(EXTRAVERSION)
export VERSION PATCHLEVEL SUBLEVEL SIMUVERSION

## 7.5 kconfig
KCONFIG_CONFIG  ?= .config
export KCONFIG_CONFIG

## SHELL used by kbuild
CONFIG_SHELL := $(shell if [ -x "$$BASH" ]; then echo $$BASH; \
	  else if [ -x /bin/bash ]; then echo /bin/bash; \
	  else echo sh; fi ; fi)

## 7.6 Make variables (CC, etc...)
AS              = as
LD              = ld
CC              = gcc
CXX             = g++
AR              = ar
NM              = nm
STRIP           = strip
OBJCOPY         = objcopy
OBJDUMP         = objdump
CFLAGS          = 
CXXFLAGS        = 

export CONFIG_SHELL AS LD CC AR NM STRIP OBJCOPY OBJDUMP
export MAKE

## 7.7 simulator main entry 
PHONY += simu
_all: simu

## 7.8 objects link to simulator
arch-y          := arch/
core-y          := kernel/
lib-y           := lib/


PHONY += help
help:
	@echo  'Cleaning targets:'
	@echo  '  clean           - Remove most generated files but keep the .config'

simu: help


endif # skip-makefile


# End-1.Force
PHONY += FORCE
FORCE:

# End.Declare the contents of the PHONY variable as phony
.PHONY: $(PHONY)
